package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 报价<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:3330</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcQuoteField extends Structure {
	/**
	 * 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 投资者代码<br>
	 * C type : TThostFtdcInvestorIDType
	 */
	public byte[] InvestorID = new byte[13];
	/**
	 * 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] InstrumentID = new byte[31];
	/**
	 * 报价引用<br>
	 * C type : TThostFtdcOrderRefType
	 */
	public byte[] QuoteRef = new byte[13];
	/**
	 * 用户代码<br>
	 * C type : TThostFtdcUserIDType
	 */
	public byte[] UserID = new byte[16];
	/**
	 * 卖价格<br>
	 * C type : TThostFtdcPriceType
	 */
	public double AskPrice;
	/**
	 * 买价格<br>
	 * C type : TThostFtdcPriceType
	 */
	public double BidPrice;
	/**
	 * 卖数量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int AskVolume;
	/**
	 * 买数量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int BidVolume;
	/**
	 * 请求编号<br>
	 * C type : TThostFtdcRequestIDType
	 */
	public int RequestID;
	/**
	 * 业务单元<br>
	 * C type : TThostFtdcBusinessUnitType
	 */
	public byte[] BusinessUnit = new byte[21];
	/**
	 * 卖开平标志<br>
	 * C type : TThostFtdcOffsetFlagType
	 */
	public byte AskOffsetFlag;
	/**
	 * 买开平标志<br>
	 * C type : TThostFtdcOffsetFlagType
	 */
	public byte BidOffsetFlag;
	/**
	 * 卖投机套保标志<br>
	 * C type : TThostFtdcHedgeFlagType
	 */
	public byte AskHedgeFlag;
	/**
	 * 买投机套保标志<br>
	 * C type : TThostFtdcHedgeFlagType
	 */
	public byte BidHedgeFlag;
	/**
	 * 本地报价编号<br>
	 * C type : TThostFtdcOrderLocalIDType
	 */
	public byte[] QuoteLocalID = new byte[13];
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 会员代码<br>
	 * C type : TThostFtdcParticipantIDType
	 */
	public byte[] ParticipantID = new byte[11];
	/**
	 * 客户代码<br>
	 * C type : TThostFtdcClientIDType
	 */
	public byte[] ClientID = new byte[11];
	/**
	 * 合约在交易所的代码<br>
	 * C type : TThostFtdcExchangeInstIDType
	 */
	public byte[] ExchangeInstID = new byte[31];
	/**
	 * 交易所交易员代码<br>
	 * C type : TThostFtdcTraderIDType
	 */
	public byte[] TraderID = new byte[21];
	/**
	 * 安装编号<br>
	 * C type : TThostFtdcInstallIDType
	 */
	public int InstallID;
	/**
	 * 报价提示序号<br>
	 * C type : TThostFtdcSequenceNoType
	 */
	public int NotifySequence;
	/**
	 * 报价提交状态<br>
	 * C type : TThostFtdcOrderSubmitStatusType
	 */
	public byte OrderSubmitStatus;
	/**
	 * 交易日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] TradingDay = new byte[9];
	/**
	 * 结算编号<br>
	 * C type : TThostFtdcSettlementIDType
	 */
	public int SettlementID;
	/**
	 * 报价编号<br>
	 * C type : TThostFtdcOrderSysIDType
	 */
	public byte[] QuoteSysID = new byte[21];
	/**
	 * 报单日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] InsertDate = new byte[9];
	/**
	 * 插入时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] InsertTime = new byte[9];
	/**
	 * 撤销时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] CancelTime = new byte[9];
	/**
	 * 报价状态<br>
	 * C type : TThostFtdcOrderStatusType
	 */
	public byte QuoteStatus;
	/**
	 * 结算会员编号<br>
	 * C type : TThostFtdcParticipantIDType
	 */
	public byte[] ClearingPartID = new byte[11];
	/**
	 * 序号<br>
	 * C type : TThostFtdcSequenceNoType
	 */
	public int SequenceNo;
	/**
	 * 卖方报单编号<br>
	 * C type : TThostFtdcOrderSysIDType
	 */
	public byte[] AskOrderSysID = new byte[21];
	/**
	 * 买方报单编号<br>
	 * C type : TThostFtdcOrderSysIDType
	 */
	public byte[] BidOrderSysID = new byte[21];
	/**
	 * 前置编号<br>
	 * C type : TThostFtdcFrontIDType
	 */
	public int FrontID;
	/**
	 * 会话编号<br>
	 * C type : TThostFtdcSessionIDType
	 */
	public int SessionID;
	/**
	 * 用户端产品信息<br>
	 * C type : TThostFtdcProductInfoType
	 */
	public byte[] UserProductInfo = new byte[11];
	/**
	 * 状态信息<br>
	 * C type : TThostFtdcErrorMsgType
	 */
	public byte[] StatusMsg = new byte[81];
	/**
	 * 操作用户代码<br>
	 * C type : TThostFtdcUserIDType
	 */
	public byte[] ActiveUserID = new byte[16];
	/**
	 * 经纪公司报价编号<br>
	 * C type : TThostFtdcSequenceNoType
	 */
	public int BrokerQuoteSeq;
	public CThostFtdcQuoteField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("BrokerID", "InvestorID", "InstrumentID", "QuoteRef", "UserID", "AskPrice", "BidPrice", "AskVolume", "BidVolume", "RequestID", "BusinessUnit", "AskOffsetFlag", "BidOffsetFlag", "AskHedgeFlag", "BidHedgeFlag", "QuoteLocalID", "ExchangeID", "ParticipantID", "ClientID", "ExchangeInstID", "TraderID", "InstallID", "NotifySequence", "OrderSubmitStatus", "TradingDay", "SettlementID", "QuoteSysID", "InsertDate", "InsertTime", "CancelTime", "QuoteStatus", "ClearingPartID", "SequenceNo", "AskOrderSysID", "BidOrderSysID", "FrontID", "SessionID", "UserProductInfo", "StatusMsg", "ActiveUserID", "BrokerQuoteSeq");
	}
	public static class ByReference extends CThostFtdcQuoteField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcQuoteField implements Structure.ByValue {
		
	};
}
