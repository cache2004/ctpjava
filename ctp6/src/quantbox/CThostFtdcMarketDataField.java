package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 市场行情<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:3654</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcMarketDataField extends Structure {
	/**
	 * 交易日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] TradingDay = new byte[9];
	/**
	 * 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] InstrumentID = new byte[31];
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 合约在交易所的代码<br>
	 * C type : TThostFtdcExchangeInstIDType
	 */
	public byte[] ExchangeInstID = new byte[31];
	/**
	 * 最新价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double LastPrice;
	/**
	 * 上次结算价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double PreSettlementPrice;
	/**
	 * 昨收盘<br>
	 * C type : TThostFtdcPriceType
	 */
	public double PreClosePrice;
	/**
	 * 昨持仓量<br>
	 * C type : TThostFtdcLargeVolumeType
	 */
	public double PreOpenInterest;
	/**
	 * 今开盘<br>
	 * C type : TThostFtdcPriceType
	 */
	public double OpenPrice;
	/**
	 * 最高价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double HighestPrice;
	/**
	 * 最低价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double LowestPrice;
	/**
	 * 数量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int Volume;
	/**
	 * 成交金额<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double Turnover;
	/**
	 * 持仓量<br>
	 * C type : TThostFtdcLargeVolumeType
	 */
	public double OpenInterest;
	/**
	 * 今收盘<br>
	 * C type : TThostFtdcPriceType
	 */
	public double ClosePrice;
	/**
	 * 本次结算价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double SettlementPrice;
	/**
	 * 涨停板价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double UpperLimitPrice;
	/**
	 * 跌停板价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double LowerLimitPrice;
	/**
	 * 昨虚实度<br>
	 * C type : TThostFtdcRatioType
	 */
	public double PreDelta;
	/**
	 * 今虚实度<br>
	 * C type : TThostFtdcRatioType
	 */
	public double CurrDelta;
	/**
	 * 最后修改时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] UpdateTime = new byte[9];
	/**
	 * 最后修改毫秒<br>
	 * C type : TThostFtdcMillisecType
	 */
	public int UpdateMillisec;
	/**
	 * 业务日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] ActionDay = new byte[9];
	public CThostFtdcMarketDataField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("TradingDay", "InstrumentID", "ExchangeID", "ExchangeInstID", "LastPrice", "PreSettlementPrice", "PreClosePrice", "PreOpenInterest", "OpenPrice", "HighestPrice", "LowestPrice", "Volume", "Turnover", "OpenInterest", "ClosePrice", "SettlementPrice", "UpperLimitPrice", "LowerLimitPrice", "PreDelta", "CurrDelta", "UpdateTime", "UpdateMillisec", "ActionDay");
	}
	public static class ByReference extends CThostFtdcMarketDataField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcMarketDataField implements Structure.ByValue {
		
	};
}
