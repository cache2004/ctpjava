package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 查询报单<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:2523</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcQryHisOrderField extends Structure {
	/**
	 * 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 投资者代码<br>
	 * C type : TThostFtdcInvestorIDType
	 */
	public byte[] InvestorID = new byte[13];
	/**
	 * 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] InstrumentID = new byte[31];
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 报单编号<br>
	 * C type : TThostFtdcOrderSysIDType
	 */
	public byte[] OrderSysID = new byte[21];
	/**
	 * 开始时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] InsertTimeStart = new byte[9];
	/**
	 * 结束时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] InsertTimeEnd = new byte[9];
	/**
	 * 交易日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] TradingDay = new byte[9];
	/**
	 * 结算编号<br>
	 * C type : TThostFtdcSettlementIDType
	 */
	public int SettlementID;
	public CThostFtdcQryHisOrderField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("BrokerID", "InvestorID", "InstrumentID", "ExchangeID", "OrderSysID", "InsertTimeStart", "InsertTimeEnd", "TradingDay", "SettlementID");
	}
	/**
	 * @param BrokerID 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType<br>
	 * @param InvestorID 投资者代码<br>
	 * C type : TThostFtdcInvestorIDType<br>
	 * @param InstrumentID 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType<br>
	 * @param ExchangeID 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType<br>
	 * @param OrderSysID 报单编号<br>
	 * C type : TThostFtdcOrderSysIDType<br>
	 * @param InsertTimeStart 开始时间<br>
	 * C type : TThostFtdcTimeType<br>
	 * @param InsertTimeEnd 结束时间<br>
	 * C type : TThostFtdcTimeType<br>
	 * @param TradingDay 交易日<br>
	 * C type : TThostFtdcDateType<br>
	 * @param SettlementID 结算编号<br>
	 * C type : TThostFtdcSettlementIDType
	 */
	public CThostFtdcQryHisOrderField(byte BrokerID[], byte InvestorID[], byte InstrumentID[], byte ExchangeID[], byte OrderSysID[], byte InsertTimeStart[], byte InsertTimeEnd[], byte TradingDay[], int SettlementID) {
		super();
		if ((BrokerID.length != this.BrokerID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.BrokerID = BrokerID;
		if ((InvestorID.length != this.InvestorID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.InvestorID = InvestorID;
		if ((InstrumentID.length != this.InstrumentID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.InstrumentID = InstrumentID;
		if ((ExchangeID.length != this.ExchangeID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ExchangeID = ExchangeID;
		if ((OrderSysID.length != this.OrderSysID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.OrderSysID = OrderSysID;
		if ((InsertTimeStart.length != this.InsertTimeStart.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.InsertTimeStart = InsertTimeStart;
		if ((InsertTimeEnd.length != this.InsertTimeEnd.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.InsertTimeEnd = InsertTimeEnd;
		if ((TradingDay.length != this.TradingDay.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.TradingDay = TradingDay;
		this.SettlementID = SettlementID;
	}
	public static class ByReference extends CThostFtdcQryHisOrderField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcQryHisOrderField implements Structure.ByValue {
		
	};
}
