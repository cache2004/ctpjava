package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 银行资金转期货请求，TradeCode=202001<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:162</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcTransferBankToFutureReqField extends Structure {
	/**
	 * 期货资金账户<br>
	 * C type : TThostFtdcAccountIDType
	 */
	public byte[] FutureAccount = new byte[13];
	/**
	 * 密码标志<br>
	 * C type : TThostFtdcFuturePwdFlagType
	 */
	public byte FuturePwdFlag;
	/**
	 * 密码<br>
	 * C type : TThostFtdcFutureAccPwdType
	 */
	public byte[] FutureAccPwd = new byte[17];
	/**
	 * 转账金额<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double TradeAmt;
	/**
	 * 客户手续费<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double CustFee;
	/**
	 * 币种：RMB-人民币 USD-美圆 HKD-港元<br>
	 * C type : TThostFtdcCurrencyCodeType
	 */
	public byte[] CurrencyCode = new byte[4];
	public CThostFtdcTransferBankToFutureReqField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("FutureAccount", "FuturePwdFlag", "FutureAccPwd", "TradeAmt", "CustFee", "CurrencyCode");
	}
	/**
	 * @param FutureAccount 期货资金账户<br>
	 * C type : TThostFtdcAccountIDType<br>
	 * @param FuturePwdFlag 密码标志<br>
	 * C type : TThostFtdcFuturePwdFlagType<br>
	 * @param FutureAccPwd 密码<br>
	 * C type : TThostFtdcFutureAccPwdType<br>
	 * @param TradeAmt 转账金额<br>
	 * C type : TThostFtdcMoneyType<br>
	 * @param CustFee 客户手续费<br>
	 * C type : TThostFtdcMoneyType<br>
	 * @param CurrencyCode 币种：RMB-人民币 USD-美圆 HKD-港元<br>
	 * C type : TThostFtdcCurrencyCodeType
	 */
	public CThostFtdcTransferBankToFutureReqField(byte FutureAccount[], byte FuturePwdFlag, byte FutureAccPwd[], double TradeAmt, double CustFee, byte CurrencyCode[]) {
		super();
		if ((FutureAccount.length != this.FutureAccount.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.FutureAccount = FutureAccount;
		this.FuturePwdFlag = FuturePwdFlag;
		if ((FutureAccPwd.length != this.FutureAccPwd.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.FutureAccPwd = FutureAccPwd;
		this.TradeAmt = TradeAmt;
		this.CustFee = CustFee;
		if ((CurrencyCode.length != this.CurrencyCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.CurrencyCode = CurrencyCode;
	}
	public static class ByReference extends CThostFtdcTransferBankToFutureReqField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcTransferBankToFutureReqField implements Structure.ByValue {
		
	};
}
