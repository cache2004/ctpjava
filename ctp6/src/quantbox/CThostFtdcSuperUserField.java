package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 管理用户<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:519</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcSuperUserField extends Structure {
	/**
	 * 用户代码<br>
	 * C type : TThostFtdcUserIDType
	 */
	public byte[] UserID = new byte[16];
	/**
	 * 用户名称<br>
	 * C type : TThostFtdcUserNameType
	 */
	public byte[] UserName = new byte[81];
	/**
	 * 密码<br>
	 * C type : TThostFtdcPasswordType
	 */
	public byte[] Password = new byte[41];
	/**
	 * 是否活跃<br>
	 * C type : TThostFtdcBoolType
	 */
	public int IsActive;
	public CThostFtdcSuperUserField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("UserID", "UserName", "Password", "IsActive");
	}
	/**
	 * @param UserID 用户代码<br>
	 * C type : TThostFtdcUserIDType<br>
	 * @param UserName 用户名称<br>
	 * C type : TThostFtdcUserNameType<br>
	 * @param Password 密码<br>
	 * C type : TThostFtdcPasswordType<br>
	 * @param IsActive 是否活跃<br>
	 * C type : TThostFtdcBoolType
	 */
	public CThostFtdcSuperUserField(byte UserID[], byte UserName[], byte Password[], int IsActive) {
		super();
		if ((UserID.length != this.UserID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.UserID = UserID;
		if ((UserName.length != this.UserName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.UserName = UserName;
		if ((Password.length != this.Password.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.Password = Password;
		this.IsActive = IsActive;
	}
	public static class ByReference extends CThostFtdcSuperUserField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcSuperUserField implements Structure.ByValue {
		
	};
}
