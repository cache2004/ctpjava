package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 交易所保证金率调整<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:1047</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcExchangeMarginRateAdjustField extends Structure {
	/**
	 * 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] InstrumentID = new byte[31];
	/**
	 * 投机套保标志<br>
	 * C type : TThostFtdcHedgeFlagType
	 */
	public byte HedgeFlag;
	/**
	 * 跟随交易所投资者多头保证金率<br>
	 * C type : TThostFtdcRatioType
	 */
	public double LongMarginRatioByMoney;
	/**
	 * 跟随交易所投资者多头保证金费<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double LongMarginRatioByVolume;
	/**
	 * 跟随交易所投资者空头保证金率<br>
	 * C type : TThostFtdcRatioType
	 */
	public double ShortMarginRatioByMoney;
	/**
	 * 跟随交易所投资者空头保证金费<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double ShortMarginRatioByVolume;
	/**
	 * 交易所多头保证金率<br>
	 * C type : TThostFtdcRatioType
	 */
	public double ExchLongMarginRatioByMoney;
	/**
	 * 交易所多头保证金费<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double ExchLongMarginRatioByVolume;
	/**
	 * 交易所空头保证金率<br>
	 * C type : TThostFtdcRatioType
	 */
	public double ExchShortMarginRatioByMoney;
	/**
	 * 交易所空头保证金费<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double ExchShortMarginRatioByVolume;
	/**
	 * 不跟随交易所投资者多头保证金率<br>
	 * C type : TThostFtdcRatioType
	 */
	public double NoLongMarginRatioByMoney;
	/**
	 * 不跟随交易所投资者多头保证金费<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double NoLongMarginRatioByVolume;
	/**
	 * 不跟随交易所投资者空头保证金率<br>
	 * C type : TThostFtdcRatioType
	 */
	public double NoShortMarginRatioByMoney;
	/**
	 * 不跟随交易所投资者空头保证金费<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double NoShortMarginRatioByVolume;
	public CThostFtdcExchangeMarginRateAdjustField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("BrokerID", "InstrumentID", "HedgeFlag", "LongMarginRatioByMoney", "LongMarginRatioByVolume", "ShortMarginRatioByMoney", "ShortMarginRatioByVolume", "ExchLongMarginRatioByMoney", "ExchLongMarginRatioByVolume", "ExchShortMarginRatioByMoney", "ExchShortMarginRatioByVolume", "NoLongMarginRatioByMoney", "NoLongMarginRatioByVolume", "NoShortMarginRatioByMoney", "NoShortMarginRatioByVolume");
	}
	public static class ByReference extends CThostFtdcExchangeMarginRateAdjustField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcExchangeMarginRateAdjustField implements Structure.ByValue {
		
	};
}
