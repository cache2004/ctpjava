package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 输入的执行宣告<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:2683</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcInputExecOrderField extends Structure {
	/**
	 * 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 投资者代码<br>
	 * C type : TThostFtdcInvestorIDType
	 */
	public byte[] InvestorID = new byte[13];
	/**
	 * 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] InstrumentID = new byte[31];
	/**
	 * 执行宣告引用<br>
	 * C type : TThostFtdcOrderRefType
	 */
	public byte[] ExecOrderRef = new byte[13];
	/**
	 * 用户代码<br>
	 * C type : TThostFtdcUserIDType
	 */
	public byte[] UserID = new byte[16];
	/**
	 * 数量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int Volume;
	/**
	 * 请求编号<br>
	 * C type : TThostFtdcRequestIDType
	 */
	public int RequestID;
	/**
	 * 业务单元<br>
	 * C type : TThostFtdcBusinessUnitType
	 */
	public byte[] BusinessUnit = new byte[21];
	/**
	 * 开平标志<br>
	 * C type : TThostFtdcOffsetFlagType
	 */
	public byte OffsetFlag;
	/**
	 * 投机套保标志<br>
	 * C type : TThostFtdcHedgeFlagType
	 */
	public byte HedgeFlag;
	/**
	 * 执行类型<br>
	 * C type : TThostFtdcActionTypeType
	 */
	public byte ActionType;
	/**
	 * 保留头寸申请的持仓方向<br>
	 * C type : TThostFtdcPosiDirectionType
	 */
	public byte PosiDirection;
	/**
	 * 期权行权后是否保留期货头寸的标记<br>
	 * C type : TThostFtdcExecOrderPositionFlagType
	 */
	public byte ReservePositionFlag;
	/**
	 * 期权行权后生成的头寸是否自动平仓<br>
	 * C type : TThostFtdcExecOrderCloseFlagType
	 */
	public byte CloseFlag;
	public CThostFtdcInputExecOrderField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("BrokerID", "InvestorID", "InstrumentID", "ExecOrderRef", "UserID", "Volume", "RequestID", "BusinessUnit", "OffsetFlag", "HedgeFlag", "ActionType", "PosiDirection", "ReservePositionFlag", "CloseFlag");
	}
	public static class ByReference extends CThostFtdcInputExecOrderField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcInputExecOrderField implements Structure.ByValue {
		
	};
}
