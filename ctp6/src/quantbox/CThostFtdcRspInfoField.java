package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 响应信息<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:302</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcRspInfoField extends Structure {
	/**
	 * 错误代码<br>
	 * C type : TThostFtdcErrorIDType
	 */
	public int ErrorID;
	/**
	 * 错误信息<br>
	 * C type : TThostFtdcErrorMsgType
	 */
	public byte[] ErrorMsg = new byte[81];
	public CThostFtdcRspInfoField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ErrorID", "ErrorMsg");
	}
	/**
	 * @param ErrorID 错误代码<br>
	 * C type : TThostFtdcErrorIDType<br>
	 * @param ErrorMsg 错误信息<br>
	 * C type : TThostFtdcErrorMsgType
	 */
	public CThostFtdcRspInfoField(int ErrorID, byte ErrorMsg[]) {
		super();
		this.ErrorID = ErrorID;
		if ((ErrorMsg.length != this.ErrorMsg.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ErrorMsg = ErrorMsg;
	}
	public static class ByReference extends CThostFtdcRspInfoField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcRspInfoField implements Structure.ByValue {
		
	};
}
