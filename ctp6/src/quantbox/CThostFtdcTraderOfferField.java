package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 交易所交易员报盘机<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:943</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcTraderOfferField extends Structure {
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 交易所交易员代码<br>
	 * C type : TThostFtdcTraderIDType
	 */
	public byte[] TraderID = new byte[21];
	/**
	 * 会员代码<br>
	 * C type : TThostFtdcParticipantIDType
	 */
	public byte[] ParticipantID = new byte[11];
	/**
	 * 密码<br>
	 * C type : TThostFtdcPasswordType
	 */
	public byte[] Password = new byte[41];
	/**
	 * 安装编号<br>
	 * C type : TThostFtdcInstallIDType
	 */
	public int InstallID;
	/**
	 * 本地报单编号<br>
	 * C type : TThostFtdcOrderLocalIDType
	 */
	public byte[] OrderLocalID = new byte[13];
	/**
	 * 交易所交易员连接状态<br>
	 * C type : TThostFtdcTraderConnectStatusType
	 */
	public byte TraderConnectStatus;
	/**
	 * 发出连接请求的日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] ConnectRequestDate = new byte[9];
	/**
	 * 发出连接请求的时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] ConnectRequestTime = new byte[9];
	/**
	 * 上次报告日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] LastReportDate = new byte[9];
	/**
	 * 上次报告时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] LastReportTime = new byte[9];
	/**
	 * 完成连接日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] ConnectDate = new byte[9];
	/**
	 * 完成连接时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] ConnectTime = new byte[9];
	/**
	 * 启动日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] StartDate = new byte[9];
	/**
	 * 启动时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] StartTime = new byte[9];
	/**
	 * 交易日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] TradingDay = new byte[9];
	/**
	 * 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 本席位最大成交编号<br>
	 * C type : TThostFtdcTradeIDType
	 */
	public byte[] MaxTradeID = new byte[21];
	/**
	 * 本席位最大报单备拷<br>
	 * C type : TThostFtdcReturnCodeType
	 */
	public byte[] MaxOrderMessageReference = new byte[7];
	public CThostFtdcTraderOfferField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ExchangeID", "TraderID", "ParticipantID", "Password", "InstallID", "OrderLocalID", "TraderConnectStatus", "ConnectRequestDate", "ConnectRequestTime", "LastReportDate", "LastReportTime", "ConnectDate", "ConnectTime", "StartDate", "StartTime", "TradingDay", "BrokerID", "MaxTradeID", "MaxOrderMessageReference");
	}
	public static class ByReference extends CThostFtdcTraderOfferField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcTraderOfferField implements Structure.ByValue {
		
	};
}
