package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 经纪公司资金<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:4982</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcBrokerDepositField extends Structure {
	/**
	 * 交易日期<br>
	 * C type : TThostFtdcTradeDateType
	 */
	public byte[] TradingDay = new byte[9];
	/**
	 * 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 会员代码<br>
	 * C type : TThostFtdcParticipantIDType
	 */
	public byte[] ParticipantID = new byte[11];
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 上次结算准备金<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double PreBalance;
	/**
	 * 当前保证金总额<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double CurrMargin;
	/**
	 * 平仓盈亏<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double CloseProfit;
	/**
	 * 期货结算准备金<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double Balance;
	/**
	 * 入金金额<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double Deposit;
	/**
	 * 出金金额<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double Withdraw;
	/**
	 * 可提资金<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double Available;
	/**
	 * 基本准备金<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double Reserve;
	/**
	 * 冻结的保证金<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double FrozenMargin;
	public CThostFtdcBrokerDepositField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("TradingDay", "BrokerID", "ParticipantID", "ExchangeID", "PreBalance", "CurrMargin", "CloseProfit", "Balance", "Deposit", "Withdraw", "Available", "Reserve", "FrozenMargin");
	}
	public static class ByReference extends CThostFtdcBrokerDepositField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcBrokerDepositField implements Structure.ByValue {
		
	};
}
