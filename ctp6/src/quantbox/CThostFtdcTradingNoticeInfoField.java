package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 用户事件通知信息<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:4574</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcTradingNoticeInfoField extends Structure {
	/**
	 * 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 投资者代码<br>
	 * C type : TThostFtdcInvestorIDType
	 */
	public byte[] InvestorID = new byte[13];
	/**
	 * 发送时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] SendTime = new byte[9];
	/**
	 * 消息正文<br>
	 * C type : TThostFtdcContentType
	 */
	public byte[] FieldContent = new byte[501];
	/**
	 * 序列系列号<br>
	 * C type : TThostFtdcSequenceSeriesType
	 */
	public short SequenceSeries;
	/**
	 * 序列号<br>
	 * C type : TThostFtdcSequenceNoType
	 */
	public int SequenceNo;
	public CThostFtdcTradingNoticeInfoField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("BrokerID", "InvestorID", "SendTime", "FieldContent", "SequenceSeries", "SequenceNo");
	}
	/**
	 * @param BrokerID 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType<br>
	 * @param InvestorID 投资者代码<br>
	 * C type : TThostFtdcInvestorIDType<br>
	 * @param SendTime 发送时间<br>
	 * C type : TThostFtdcTimeType<br>
	 * @param FieldContent 消息正文<br>
	 * C type : TThostFtdcContentType<br>
	 * @param SequenceSeries 序列系列号<br>
	 * C type : TThostFtdcSequenceSeriesType<br>
	 * @param SequenceNo 序列号<br>
	 * C type : TThostFtdcSequenceNoType
	 */
	public CThostFtdcTradingNoticeInfoField(byte BrokerID[], byte InvestorID[], byte SendTime[], byte FieldContent[], short SequenceSeries, int SequenceNo) {
		super();
		if ((BrokerID.length != this.BrokerID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.BrokerID = BrokerID;
		if ((InvestorID.length != this.InvestorID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.InvestorID = InvestorID;
		if ((SendTime.length != this.SendTime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.SendTime = SendTime;
		if ((FieldContent.length != this.FieldContent.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.FieldContent = FieldContent;
		this.SequenceSeries = SequenceSeries;
		this.SequenceNo = SequenceNo;
	}
	public static class ByReference extends CThostFtdcTradingNoticeInfoField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcTradingNoticeInfoField implements Structure.ByValue {
		
	};
}
