package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 深度行情<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:796</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcDepthMarketDataField extends Structure {
	/**
	 * 交易日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] TradingDay = new byte[9];
	/**
	 * 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] InstrumentID = new byte[31];
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 合约在交易所的代码<br>
	 * C type : TThostFtdcExchangeInstIDType
	 */
	public byte[] ExchangeInstID = new byte[31];
	/**
	 * 最新价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double LastPrice;
	/**
	 * 上次结算价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double PreSettlementPrice;
	/**
	 * 昨收盘<br>
	 * C type : TThostFtdcPriceType
	 */
	public double PreClosePrice;
	/**
	 * 昨持仓量<br>
	 * C type : TThostFtdcLargeVolumeType
	 */
	public double PreOpenInterest;
	/**
	 * 今开盘<br>
	 * C type : TThostFtdcPriceType
	 */
	public double OpenPrice;
	/**
	 * 最高价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double HighestPrice;
	/**
	 * 最低价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double LowestPrice;
	/**
	 * 数量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int Volume;
	/**
	 * 成交金额<br>
	 * C type : TThostFtdcMoneyType
	 */
	public double Turnover;
	/**
	 * 持仓量<br>
	 * C type : TThostFtdcLargeVolumeType
	 */
	public double OpenInterest;
	/**
	 * 今收盘<br>
	 * C type : TThostFtdcPriceType
	 */
	public double ClosePrice;
	/**
	 * 本次结算价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double SettlementPrice;
	/**
	 * 涨停板价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double UpperLimitPrice;
	/**
	 * 跌停板价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double LowerLimitPrice;
	/**
	 * 昨虚实度<br>
	 * C type : TThostFtdcRatioType
	 */
	public double PreDelta;
	/**
	 * 今虚实度<br>
	 * C type : TThostFtdcRatioType
	 */
	public double CurrDelta;
	/**
	 * 最后修改时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] UpdateTime = new byte[9];
	/**
	 * 最后修改毫秒<br>
	 * C type : TThostFtdcMillisecType
	 */
	public int UpdateMillisec;
	/**
	 * 申买价一<br>
	 * C type : TThostFtdcPriceType
	 */
	public double BidPrice1;
	/**
	 * 申买量一<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int BidVolume1;
	/**
	 * 申卖价一<br>
	 * C type : TThostFtdcPriceType
	 */
	public double AskPrice1;
	/**
	 * 申卖量一<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int AskVolume1;
	/**
	 * 申买价二<br>
	 * C type : TThostFtdcPriceType
	 */
	public double BidPrice2;
	/**
	 * 申买量二<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int BidVolume2;
	/**
	 * 申卖价二<br>
	 * C type : TThostFtdcPriceType
	 */
	public double AskPrice2;
	/**
	 * 申卖量二<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int AskVolume2;
	/**
	 * 申买价三<br>
	 * C type : TThostFtdcPriceType
	 */
	public double BidPrice3;
	/**
	 * 申买量三<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int BidVolume3;
	/**
	 * 申卖价三<br>
	 * C type : TThostFtdcPriceType
	 */
	public double AskPrice3;
	/**
	 * 申卖量三<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int AskVolume3;
	/**
	 * 申买价四<br>
	 * C type : TThostFtdcPriceType
	 */
	public double BidPrice4;
	/**
	 * 申买量四<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int BidVolume4;
	/**
	 * 申卖价四<br>
	 * C type : TThostFtdcPriceType
	 */
	public double AskPrice4;
	/**
	 * 申卖量四<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int AskVolume4;
	/**
	 * 申买价五<br>
	 * C type : TThostFtdcPriceType
	 */
	public double BidPrice5;
	/**
	 * 申买量五<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int BidVolume5;
	/**
	 * 申卖价五<br>
	 * C type : TThostFtdcPriceType
	 */
	public double AskPrice5;
	/**
	 * 申卖量五<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int AskVolume5;
	/**
	 * 当日均价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double AveragePrice;
	/**
	 * 业务日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] ActionDay = new byte[9];
	public CThostFtdcDepthMarketDataField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("TradingDay", "InstrumentID", "ExchangeID", "ExchangeInstID", "LastPrice", "PreSettlementPrice", "PreClosePrice", "PreOpenInterest", "OpenPrice", "HighestPrice", "LowestPrice", "Volume", "Turnover", "OpenInterest", "ClosePrice", "SettlementPrice", "UpperLimitPrice", "LowerLimitPrice", "PreDelta", "CurrDelta", "UpdateTime", "UpdateMillisec", "BidPrice1", "BidVolume1", "AskPrice1", "AskVolume1", "BidPrice2", "BidVolume2", "AskPrice2", "AskVolume2", "BidPrice3", "BidVolume3", "AskPrice3", "AskVolume3", "BidPrice4", "BidVolume4", "AskPrice4", "AskVolume4", "BidPrice5", "BidVolume5", "AskPrice5", "AskVolume5", "AveragePrice", "ActionDay");
	}
	public static class ByReference extends CThostFtdcDepthMarketDataField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcDepthMarketDataField implements Structure.ByValue {
		
	};
}
