package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 查询交易所报单操作<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:2376</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcQryExchangeOrderActionField extends Structure {
	/**
	 * 会员代码<br>
	 * C type : TThostFtdcParticipantIDType
	 */
	public byte[] ParticipantID = new byte[11];
	/**
	 * 客户代码<br>
	 * C type : TThostFtdcClientIDType
	 */
	public byte[] ClientID = new byte[11];
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 交易所交易员代码<br>
	 * C type : TThostFtdcTraderIDType
	 */
	public byte[] TraderID = new byte[21];
	public CThostFtdcQryExchangeOrderActionField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ParticipantID", "ClientID", "ExchangeID", "TraderID");
	}
	/**
	 * @param ParticipantID 会员代码<br>
	 * C type : TThostFtdcParticipantIDType<br>
	 * @param ClientID 客户代码<br>
	 * C type : TThostFtdcClientIDType<br>
	 * @param ExchangeID 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType<br>
	 * @param TraderID 交易所交易员代码<br>
	 * C type : TThostFtdcTraderIDType
	 */
	public CThostFtdcQryExchangeOrderActionField(byte ParticipantID[], byte ClientID[], byte ExchangeID[], byte TraderID[]) {
		super();
		if ((ParticipantID.length != this.ParticipantID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ParticipantID = ParticipantID;
		if ((ClientID.length != this.ClientID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ClientID = ClientID;
		if ((ExchangeID.length != this.ExchangeID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ExchangeID = ExchangeID;
		if ((TraderID.length != this.TraderID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.TraderID = TraderID;
	}
	public static class ByReference extends CThostFtdcQryExchangeOrderActionField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcQryExchangeOrderActionField implements Structure.ByValue {
		
	};
}
