package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 查询组合合约分腿<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:4174</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcQryCombinationLegField extends Structure {
	/**
	 * 组合合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] CombInstrumentID = new byte[31];
	/**
	 * 单腿编号<br>
	 * C type : TThostFtdcLegIDType
	 */
	public int LegID;
	/**
	 * 单腿合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] LegInstrumentID = new byte[31];
	public CThostFtdcQryCombinationLegField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("CombInstrumentID", "LegID", "LegInstrumentID");
	}
	/**
	 * @param CombInstrumentID 组合合约代码<br>
	 * C type : TThostFtdcInstrumentIDType<br>
	 * @param LegID 单腿编号<br>
	 * C type : TThostFtdcLegIDType<br>
	 * @param LegInstrumentID 单腿合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public CThostFtdcQryCombinationLegField(byte CombInstrumentID[], int LegID, byte LegInstrumentID[]) {
		super();
		if ((CombInstrumentID.length != this.CombInstrumentID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.CombInstrumentID = CombInstrumentID;
		this.LegID = LegID;
		if ((LegInstrumentID.length != this.LegInstrumentID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.LegInstrumentID = LegInstrumentID;
	}
	public static class ByReference extends CThostFtdcQryCombinationLegField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcQryCombinationLegField implements Structure.ByValue {
		
	};
}
