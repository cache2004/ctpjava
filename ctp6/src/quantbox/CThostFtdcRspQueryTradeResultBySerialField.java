package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 查询指定流水号的交易结果响应<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:6331</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcRspQueryTradeResultBySerialField extends Structure {
	/**
	 * 业务功能码<br>
	 * C type : TThostFtdcTradeCodeType
	 */
	public byte[] TradeCode = new byte[7];
	/**
	 * 银行代码<br>
	 * C type : TThostFtdcBankIDType
	 */
	public byte[] BankID = new byte[4];
	/**
	 * 银行分支机构代码<br>
	 * C type : TThostFtdcBankBrchIDType
	 */
	public byte[] BankBranchID = new byte[5];
	/**
	 * 期商代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 期商分支机构代码<br>
	 * C type : TThostFtdcFutureBranchIDType
	 */
	public byte[] BrokerBranchID = new byte[31];
	/**
	 * 交易日期<br>
	 * C type : TThostFtdcTradeDateType
	 */
	public byte[] TradeDate = new byte[9];
	/**
	 * 交易时间<br>
	 * C type : TThostFtdcTradeTimeType
	 */
	public byte[] TradeTime = new byte[9];
	/**
	 * 银行流水号<br>
	 * C type : TThostFtdcBankSerialType
	 */
	public byte[] BankSerial = new byte[13];
	/**
	 * 交易系统日期<br>
	 * C type : TThostFtdcTradeDateType
	 */
	public byte[] TradingDay = new byte[9];
	/**
	 * 银期平台消息流水号<br>
	 * C type : TThostFtdcSerialType
	 */
	public int PlateSerial;
	/**
	 * 最后分片标志<br>
	 * C type : TThostFtdcLastFragmentType
	 */
	public byte LastFragment;
	/**
	 * 会话号<br>
	 * C type : TThostFtdcSessionIDType
	 */
	public int SessionID;
	/**
	 * 错误代码<br>
	 * C type : TThostFtdcErrorIDType
	 */
	public int ErrorID;
	/**
	 * 错误信息<br>
	 * C type : TThostFtdcErrorMsgType
	 */
	public byte[] ErrorMsg = new byte[81];
	/**
	 * 流水号<br>
	 * C type : TThostFtdcSerialType
	 */
	public int Reference;
	/**
	 * 本流水号发布者的机构类型<br>
	 * C type : TThostFtdcInstitutionTypeType
	 */
	public byte RefrenceIssureType;
	/**
	 * 本流水号发布者机构编码<br>
	 * C type : TThostFtdcOrganCodeType
	 */
	public byte[] RefrenceIssure = new byte[36];
	/**
	 * 原始返回代码<br>
	 * C type : TThostFtdcReturnCodeType
	 */
	public byte[] OriginReturnCode = new byte[7];
	/**
	 * 原始返回码描述<br>
	 * C type : TThostFtdcDescrInfoForReturnCodeType
	 */
	public byte[] OriginDescrInfoForReturnCode = new byte[129];
	/**
	 * 银行帐号<br>
	 * C type : TThostFtdcBankAccountType
	 */
	public byte[] BankAccount = new byte[41];
	/**
	 * 银行密码<br>
	 * C type : TThostFtdcPasswordType
	 */
	public byte[] BankPassWord = new byte[41];
	/**
	 * 投资者帐号<br>
	 * C type : TThostFtdcAccountIDType
	 */
	public byte[] AccountID = new byte[13];
	/**
	 * 期货密码<br>
	 * C type : TThostFtdcPasswordType
	 */
	public byte[] Password = new byte[41];
	/**
	 * 币种代码<br>
	 * C type : TThostFtdcCurrencyIDType
	 */
	public byte[] CurrencyID = new byte[4];
	/**
	 * 转帐金额<br>
	 * C type : TThostFtdcTradeAmountType
	 */
	public double TradeAmount;
	/**
	 * 摘要<br>
	 * C type : TThostFtdcDigestType
	 */
	public byte[] Digest = new byte[36];
	public CThostFtdcRspQueryTradeResultBySerialField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("TradeCode", "BankID", "BankBranchID", "BrokerID", "BrokerBranchID", "TradeDate", "TradeTime", "BankSerial", "TradingDay", "PlateSerial", "LastFragment", "SessionID", "ErrorID", "ErrorMsg", "Reference", "RefrenceIssureType", "RefrenceIssure", "OriginReturnCode", "OriginDescrInfoForReturnCode", "BankAccount", "BankPassWord", "AccountID", "Password", "CurrencyID", "TradeAmount", "Digest");
	}
	public static class ByReference extends CThostFtdcRspQueryTradeResultBySerialField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcRspQueryTradeResultBySerialField implements Structure.ByValue {
		
	};
}
