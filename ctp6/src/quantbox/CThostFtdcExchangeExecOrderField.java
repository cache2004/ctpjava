package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 交易所执行宣告信息<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:2898</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcExchangeExecOrderField extends Structure {
	/**
	 * 数量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int Volume;
	/**
	 * 请求编号<br>
	 * C type : TThostFtdcRequestIDType
	 */
	public int RequestID;
	/**
	 * 业务单元<br>
	 * C type : TThostFtdcBusinessUnitType
	 */
	public byte[] BusinessUnit = new byte[21];
	/**
	 * 开平标志<br>
	 * C type : TThostFtdcOffsetFlagType
	 */
	public byte OffsetFlag;
	/**
	 * 投机套保标志<br>
	 * C type : TThostFtdcHedgeFlagType
	 */
	public byte HedgeFlag;
	/**
	 * 执行类型<br>
	 * C type : TThostFtdcActionTypeType
	 */
	public byte ActionType;
	/**
	 * 保留头寸申请的持仓方向<br>
	 * C type : TThostFtdcPosiDirectionType
	 */
	public byte PosiDirection;
	/**
	 * 期权行权后是否保留期货头寸的标记<br>
	 * C type : TThostFtdcExecOrderPositionFlagType
	 */
	public byte ReservePositionFlag;
	/**
	 * 期权行权后生成的头寸是否自动平仓<br>
	 * C type : TThostFtdcExecOrderCloseFlagType
	 */
	public byte CloseFlag;
	/**
	 * 本地执行宣告编号<br>
	 * C type : TThostFtdcOrderLocalIDType
	 */
	public byte[] ExecOrderLocalID = new byte[13];
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 会员代码<br>
	 * C type : TThostFtdcParticipantIDType
	 */
	public byte[] ParticipantID = new byte[11];
	/**
	 * 客户代码<br>
	 * C type : TThostFtdcClientIDType
	 */
	public byte[] ClientID = new byte[11];
	/**
	 * 合约在交易所的代码<br>
	 * C type : TThostFtdcExchangeInstIDType
	 */
	public byte[] ExchangeInstID = new byte[31];
	/**
	 * 交易所交易员代码<br>
	 * C type : TThostFtdcTraderIDType
	 */
	public byte[] TraderID = new byte[21];
	/**
	 * 安装编号<br>
	 * C type : TThostFtdcInstallIDType
	 */
	public int InstallID;
	/**
	 * 执行宣告提交状态<br>
	 * C type : TThostFtdcOrderSubmitStatusType
	 */
	public byte OrderSubmitStatus;
	/**
	 * 报单提示序号<br>
	 * C type : TThostFtdcSequenceNoType
	 */
	public int NotifySequence;
	/**
	 * 交易日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] TradingDay = new byte[9];
	/**
	 * 结算编号<br>
	 * C type : TThostFtdcSettlementIDType
	 */
	public int SettlementID;
	/**
	 * 执行宣告编号<br>
	 * C type : TThostFtdcExecOrderSysIDType
	 */
	public byte[] ExecOrderSysID = new byte[21];
	/**
	 * 报单日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] InsertDate = new byte[9];
	/**
	 * 插入时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] InsertTime = new byte[9];
	/**
	 * 撤销时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] CancelTime = new byte[9];
	/**
	 * 执行结果<br>
	 * C type : TThostFtdcExecResultType
	 */
	public byte ExecResult;
	/**
	 * 结算会员编号<br>
	 * C type : TThostFtdcParticipantIDType
	 */
	public byte[] ClearingPartID = new byte[11];
	/**
	 * 序号<br>
	 * C type : TThostFtdcSequenceNoType
	 */
	public int SequenceNo;
	public CThostFtdcExchangeExecOrderField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("Volume", "RequestID", "BusinessUnit", "OffsetFlag", "HedgeFlag", "ActionType", "PosiDirection", "ReservePositionFlag", "CloseFlag", "ExecOrderLocalID", "ExchangeID", "ParticipantID", "ClientID", "ExchangeInstID", "TraderID", "InstallID", "OrderSubmitStatus", "NotifySequence", "TradingDay", "SettlementID", "ExecOrderSysID", "InsertDate", "InsertTime", "CancelTime", "ExecResult", "ClearingPartID", "SequenceNo");
	}
	public static class ByReference extends CThostFtdcExchangeExecOrderField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcExchangeExecOrderField implements Structure.ByValue {
		
	};
}
