package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 灾备交易转换报文<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:7319</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcDRTransferField extends Structure {
	/**
	 * 原交易中心代码<br>
	 * C type : TThostFtdcDRIdentityIDType
	 */
	public int OrigDRIdentityID;
	/**
	 * 目标交易中心代码<br>
	 * C type : TThostFtdcDRIdentityIDType
	 */
	public int DestDRIdentityID;
	/**
	 * 原应用单元代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] OrigBrokerID = new byte[11];
	/**
	 * 目标易用单元代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] DestBrokerID = new byte[11];
	public CThostFtdcDRTransferField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("OrigDRIdentityID", "DestDRIdentityID", "OrigBrokerID", "DestBrokerID");
	}
	/**
	 * @param OrigDRIdentityID 原交易中心代码<br>
	 * C type : TThostFtdcDRIdentityIDType<br>
	 * @param DestDRIdentityID 目标交易中心代码<br>
	 * C type : TThostFtdcDRIdentityIDType<br>
	 * @param OrigBrokerID 原应用单元代码<br>
	 * C type : TThostFtdcBrokerIDType<br>
	 * @param DestBrokerID 目标易用单元代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public CThostFtdcDRTransferField(int OrigDRIdentityID, int DestDRIdentityID, byte OrigBrokerID[], byte DestBrokerID[]) {
		super();
		this.OrigDRIdentityID = OrigDRIdentityID;
		this.DestDRIdentityID = DestDRIdentityID;
		if ((OrigBrokerID.length != this.OrigBrokerID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.OrigBrokerID = OrigBrokerID;
		if ((DestBrokerID.length != this.DestBrokerID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.DestBrokerID = DestBrokerID;
	}
	public static class ByReference extends CThostFtdcDRTransferField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcDRTransferField implements Structure.ByValue {
		
	};
}
