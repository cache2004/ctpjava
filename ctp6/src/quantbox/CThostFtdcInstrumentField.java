package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 合约<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:361</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcInstrumentField extends Structure {
	/**
	 * 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] InstrumentID = new byte[31];
	/**
	 * 交易所代码<br>
	 * C type : TThostFtdcExchangeIDType
	 */
	public byte[] ExchangeID = new byte[9];
	/**
	 * 合约名称<br>
	 * C type : TThostFtdcInstrumentNameType
	 */
	public byte[] InstrumentName = new byte[21];
	/**
	 * 合约在交易所的代码<br>
	 * C type : TThostFtdcExchangeInstIDType
	 */
	public byte[] ExchangeInstID = new byte[31];
	/**
	 * 产品代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] ProductID = new byte[31];
	/**
	 * 产品类型<br>
	 * C type : TThostFtdcProductClassType
	 */
	public byte ProductClass;
	/**
	 * 交割年份<br>
	 * C type : TThostFtdcYearType
	 */
	public int DeliveryYear;
	/**
	 * 交割月<br>
	 * C type : TThostFtdcMonthType
	 */
	public int DeliveryMonth;
	/**
	 * 市价单最大下单量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int MaxMarketOrderVolume;
	/**
	 * 市价单最小下单量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int MinMarketOrderVolume;
	/**
	 * 限价单最大下单量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int MaxLimitOrderVolume;
	/**
	 * 限价单最小下单量<br>
	 * C type : TThostFtdcVolumeType
	 */
	public int MinLimitOrderVolume;
	/**
	 * 合约数量乘数<br>
	 * C type : TThostFtdcVolumeMultipleType
	 */
	public int VolumeMultiple;
	/**
	 * 最小变动价位<br>
	 * C type : TThostFtdcPriceType
	 */
	public double PriceTick;
	/**
	 * 创建日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] CreateDate = new byte[9];
	/**
	 * 上市日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] OpenDate = new byte[9];
	/**
	 * 到期日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] ExpireDate = new byte[9];
	/**
	 * 开始交割日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] StartDelivDate = new byte[9];
	/**
	 * 结束交割日<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] EndDelivDate = new byte[9];
	/**
	 * 合约生命周期状态<br>
	 * C type : TThostFtdcInstLifePhaseType
	 */
	public byte InstLifePhase;
	/**
	 * 当前是否交易<br>
	 * C type : TThostFtdcBoolType
	 */
	public int IsTrading;
	/**
	 * 持仓类型<br>
	 * C type : TThostFtdcPositionTypeType
	 */
	public byte PositionType;
	/**
	 * 持仓日期类型<br>
	 * C type : TThostFtdcPositionDateTypeType
	 */
	public byte PositionDateType;
	/**
	 * 多头保证金率<br>
	 * C type : TThostFtdcRatioType
	 */
	public double LongMarginRatio;
	/**
	 * 空头保证金率<br>
	 * C type : TThostFtdcRatioType
	 */
	public double ShortMarginRatio;
	/**
	 * 是否使用大额单边保证金算法<br>
	 * C type : TThostFtdcMaxMarginSideAlgorithmType
	 */
	public byte MaxMarginSideAlgorithm;
	/**
	 * 基础商品代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] UnderlyingInstrID = new byte[31];
	/**
	 * 执行价<br>
	 * C type : TThostFtdcPriceType
	 */
	public double StrikePrice;
	/**
	 * 期权类型<br>
	 * C type : TThostFtdcOptionsTypeType
	 */
	public byte OptionsType;
	/**
	 * 合约基础商品乘数<br>
	 * C type : TThostFtdcUnderlyingMultipleType
	 */
	public double UnderlyingMultiple;
	/**
	 * 组合类型<br>
	 * C type : TThostFtdcCombinationTypeType
	 */
	public byte CombinationType;
	public CThostFtdcInstrumentField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("InstrumentID", "ExchangeID", "InstrumentName", "ExchangeInstID", "ProductID", "ProductClass", "DeliveryYear", "DeliveryMonth", "MaxMarketOrderVolume", "MinMarketOrderVolume", "MaxLimitOrderVolume", "MinLimitOrderVolume", "VolumeMultiple", "PriceTick", "CreateDate", "OpenDate", "ExpireDate", "StartDelivDate", "EndDelivDate", "InstLifePhase", "IsTrading", "PositionType", "PositionDateType", "LongMarginRatio", "ShortMarginRatio", "MaxMarginSideAlgorithm", "UnderlyingInstrID", "StrikePrice", "OptionsType", "UnderlyingMultiple", "CombinationType");
	}
	public static class ByReference extends CThostFtdcInstrumentField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcInstrumentField implements Structure.ByValue {
		
	};
}
