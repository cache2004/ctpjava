package quantbox;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * 查询经纪公司用户事件<br>
 * <i>native declaration : ThostFtdcUserApiStruct.h:4267</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CThostFtdcBrokerUserEventField extends Structure {
	/**
	 * 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType
	 */
	public byte[] BrokerID = new byte[11];
	/**
	 * 用户代码<br>
	 * C type : TThostFtdcUserIDType
	 */
	public byte[] UserID = new byte[16];
	/**
	 * 用户事件类型<br>
	 * C type : TThostFtdcUserEventTypeType
	 */
	public byte UserEventType;
	/**
	 * 用户事件序号<br>
	 * C type : TThostFtdcSequenceNoType
	 */
	public int EventSequenceNo;
	/**
	 * 事件发生日期<br>
	 * C type : TThostFtdcDateType
	 */
	public byte[] EventDate = new byte[9];
	/**
	 * 事件发生时间<br>
	 * C type : TThostFtdcTimeType
	 */
	public byte[] EventTime = new byte[9];
	/**
	 * 用户事件信息<br>
	 * C type : TThostFtdcUserEventInfoType
	 */
	public byte[] UserEventInfo = new byte[1025];
	/**
	 * 投资者代码<br>
	 * C type : TThostFtdcInvestorIDType
	 */
	public byte[] InvestorID = new byte[13];
	/**
	 * 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public byte[] InstrumentID = new byte[31];
	public CThostFtdcBrokerUserEventField() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("BrokerID", "UserID", "UserEventType", "EventSequenceNo", "EventDate", "EventTime", "UserEventInfo", "InvestorID", "InstrumentID");
	}
	/**
	 * @param BrokerID 经纪公司代码<br>
	 * C type : TThostFtdcBrokerIDType<br>
	 * @param UserID 用户代码<br>
	 * C type : TThostFtdcUserIDType<br>
	 * @param UserEventType 用户事件类型<br>
	 * C type : TThostFtdcUserEventTypeType<br>
	 * @param EventSequenceNo 用户事件序号<br>
	 * C type : TThostFtdcSequenceNoType<br>
	 * @param EventDate 事件发生日期<br>
	 * C type : TThostFtdcDateType<br>
	 * @param EventTime 事件发生时间<br>
	 * C type : TThostFtdcTimeType<br>
	 * @param UserEventInfo 用户事件信息<br>
	 * C type : TThostFtdcUserEventInfoType<br>
	 * @param InvestorID 投资者代码<br>
	 * C type : TThostFtdcInvestorIDType<br>
	 * @param InstrumentID 合约代码<br>
	 * C type : TThostFtdcInstrumentIDType
	 */
	public CThostFtdcBrokerUserEventField(byte BrokerID[], byte UserID[], byte UserEventType, int EventSequenceNo, byte EventDate[], byte EventTime[], byte UserEventInfo[], byte InvestorID[], byte InstrumentID[]) {
		super();
		if ((BrokerID.length != this.BrokerID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.BrokerID = BrokerID;
		if ((UserID.length != this.UserID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.UserID = UserID;
		this.UserEventType = UserEventType;
		this.EventSequenceNo = EventSequenceNo;
		if ((EventDate.length != this.EventDate.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.EventDate = EventDate;
		if ((EventTime.length != this.EventTime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.EventTime = EventTime;
		if ((UserEventInfo.length != this.UserEventInfo.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.UserEventInfo = UserEventInfo;
		if ((InvestorID.length != this.InvestorID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.InvestorID = InvestorID;
		if ((InstrumentID.length != this.InstrumentID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.InstrumentID = InstrumentID;
	}
	public static class ByReference extends CThostFtdcBrokerUserEventField implements Structure.ByReference {
		
	};
	public static class ByValue extends CThostFtdcBrokerUserEventField implements Structure.ByValue {
		
	};
}
